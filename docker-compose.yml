version: '3'
services:
  # Hexo博客前端
  blog:
    build:
      context: ./blog
    ports:
      - "4000"
    networks:
      - app_network
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - blog
    networks:
      - app_network
  one-api:
    image: "${REGISTRY:-docker.io}/justsong/one-api:latest"
    container_name: one-api
    restart: always
    command: --log-dir /app/logs
    ports:
      - "3000:3000"
    volumes:
      - ./data/oneapi:/data
      - ./logs:/app/logs
    environment:
      - SQL_DSN=oneapi:123456@tcp(db:3306)/one-api  # 修改此行，或注释掉以使用 SQLite 作为数据库
      - REDIS_CONN_STRING=redis://redis
      - SESSION_SECRET=random_string  # 修改为随机字符串
      - TZ=Asia/Shanghai
    #      - NODE_TYPE=slave  # 多机部署时从节点取消注释该行
    #      - SYNC_FREQUENCY=60  # 需要定期从数据库加载数据时取消注释该行
    #      - FRONTEND_BASE_URL=https://openai.justsong.cn  # 多机部署时从节点取消注释该行
    depends_on:
      - redis
      - db
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' | awk -F: '{print $2}'" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
      image: "${REGISTRY:-docker.io}/redis:latest"
      container_name: redis
      restart: always

  db:
      image: "${REGISTRY:-docker.io}/mysql:8.2.0"
      restart: always
      container_name: mysql
      volumes:
        - ./data/mysql:/var/lib/mysql  # 挂载目录，持久化存储
      ports:
        - '3306:3306'
      environment:
        TZ: Asia/Shanghai   # 设置时区
        MYSQL_ROOT_PASSWORD: 'OneAPI@justsong' # 设置 root 用户的密码
        MYSQL_USER: oneapi   # 创建专用用户
        MYSQL_PASSWORD: '123456'    # 设置专用用户密码
        MYSQL_DATABASE: one-api   # 自动创建数据库
  chatchat:
    image: chatimage/chatchat:0.3.1.3-93e2c87-20240829
    # image: ccr.ccs.tencentyun.com/chatchat/chatchat:0.3.1.2-2024-0720
    restart: always
    # ports: # 不使用 host network 时可打开.
    #   - "7861:7861"
    #   - "8501:8501"
    network_mode: "host"
    # 将本地路径(~/chatchat)挂载到容器默认数据路径($CHATCHAT_ROOT)中
    # volumes:
    #   - /root/chatchat:/root/chatchat_data
  xinference:
    image: xprobe/xinference:v0.12.3
    restart: always
    command: xinference-local -H 0.0.0.0
    # ports: # 不使用 host network 时可打开.
    #  - "9997:9997"
    network_mode: "host"
    # 将本地路径(~/xinference)挂载到容器路径(/root/.xinference)中,
    # 详情见: https://inference.readthedocs.io/zh-cn/latest/getting_started/using_docker_image.html
    volumes:
      - ~/xinference:/root/.xinference
      # - ~/xinference/cache/huggingface:/root/.cache/huggingface
      # - ~/xinference/cache/modelscope:/root/.cache/modelscope
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    runtime: nvidia
    # 模型源更改为 ModelScope, 默认为 HuggingFace
    # environment:
    #   - XINFERENCE_MODEL_SRC=modelscope

networks:
  app_network:
    driver: bridge